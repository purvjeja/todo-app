{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n\n  let [todoArrayObject, setTodoArrayObject] = useState([]);\n  let filteredArray = [];\n  let [listCount, setListCount] = useState(0);\n  let [displayList, setDisplayList] = useState(0);\n\n  const InputFields = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"currentInput\",\n        type: \"text\",\n        placeholder: \" Add Your Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addButton\",\n        onClick: AddCurrentGoal,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 66\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ListArea = () => {\n    let listItems;\n    if (displayList === 0) listItems = todoArrayObject.map((todoArrayItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(CreateComponent, {\n        id: todoArrayItem.id,\n        content: todoArrayItem.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 106\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 88\n    }, this));else listItems = filteredArray.map((filteredArrayItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(CreateComponent, {\n        id: filteredArrayItem.id,\n        content: filteredArrayItem.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 91\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 73\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"listArea\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  const AddCurrentGoal = () => {\n    const currentGoal = document.getElementById('currentInput').value;\n\n    if (!currentGoal) {\n      alert(\"You are trying to add nothing!\");\n      return;\n    }\n\n    setTodoArrayObject([{\n      id: listCount,\n      content: currentGoal,\n      status: false\n    }, ...todoArrayObject]);\n    filteredArray.unshift({\n      id: listCount,\n      content: currentGoal,\n      status: false\n    });\n    setListCount(listCount + 1);\n  };\n\n  const CreateComponent = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.id,\n      className: \"listBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentCheckBox\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => {\n            changeCheckBox(props.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentName\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentCrossButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            deleteList(props.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 107\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changeCheckBox = thisComponentId => {\n    for (let i of todoArrayObject) {\n      if (thisComponentId === i.id) {\n        i.status = i.status === false ? true : false;\n        break;\n      }\n    }\n  };\n\n  const deleteList = thisComponentId => {\n    for (let i in todoArrayObject) {\n      if (thisComponentId === todoArrayObject[i].id) {\n        todoArrayObject.splice(i, 1);\n        document.getElementById(thisComponentId).remove();\n        break;\n      }\n    }\n  };\n\n  const filterStatus = displayType => {\n    if (displayType === \"active\") {\n      displayList = 0;\n      let filtered = todoArrayObject.filter(function (value, index, arr) {\n        if (value.status === false) return value;\n        return false;\n      });\n      filteredArray = filtered;\n      console.log(filteredArray);\n      setDisplayList(1);\n    } else if (displayType === \"completed\") {\n      displayList = 0;\n      let filtered = todoArrayObject.filter(function (value, index, arr) {\n        if (value.status === true) return value;\n        return false;\n      });\n      filteredArray = filtered;\n      console.log(filteredArray);\n      setDisplayList(1);\n    } else {\n      console.log(todoArrayObject);\n      setDisplayList(0);\n    }\n  };\n\n  const FilterButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          filterStatus(\"active\");\n        },\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          filterStatus(\"completed\");\n        },\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          filterStatus(\"all\");\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's Your Today's Goal?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputFields, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"rkx3Xlh9vdF7ikmrbE93RwjlMH4=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js"],"names":["React","useState","Todo","todoArrayObject","setTodoArrayObject","filteredArray","listCount","setListCount","displayList","setDisplayList","InputFields","AddCurrentGoal","ListArea","listItems","map","todoArrayItem","index","id","content","filteredArrayItem","currentGoal","document","getElementById","value","alert","status","unshift","CreateComponent","props","changeCheckBox","deleteList","thisComponentId","i","splice","remove","filterStatus","displayType","filtered","filter","arr","console","log","FilterButtons"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './todo.css';\n\nexport default function Todo(){\n    let [todoArrayObject,setTodoArrayObject] = useState([]);\n    let filteredArray = [];\n    let [listCount,setListCount] = useState(0);\n    let [displayList,setDisplayList] = useState(0);\n\n    const InputFields = () => {\n        return (\n            <div>\n                <input id=\"currentInput\" type=\"text\" placeholder=\" Add Your Goal\" />\n                <button id=\"addButton\" onClick={AddCurrentGoal}> <b>+</b> </button> \n            </div>\n        )\n    }\n\n    const ListArea = () => {\n        let listItems;\n        if(displayList === 0) listItems = todoArrayObject.map((todoArrayItem,index) => <div key={index}> <CreateComponent  id={todoArrayItem.id} content={todoArrayItem.content} /></div>);\n        else listItems = filteredArray.map((filteredArrayItem,index) => <div key={index}> <CreateComponent  id={filteredArrayItem.id} content={filteredArrayItem.content} /></div>);\n        return (\n            <div id=\"listArea\"> \n                {listItems}\n            </div>\n        )\n    }\n    \n\n    const AddCurrentGoal = () => {\n        const currentGoal = document.getElementById('currentInput').value;\n        if(!currentGoal){ alert(\"You are trying to add nothing!\"); return; }\n        setTodoArrayObject([{id : listCount , content : currentGoal , status : false},...todoArrayObject]);\n        filteredArray.unshift({id : listCount , content : currentGoal , status : false});\n        setListCount(listCount+1);\n    }\n\n    const CreateComponent = (props) => {\n        return (\n            <div id = {props.id} className=\"listBody\">\n                <div className=\"listComponentCheckBox\"><input  type=\"checkbox\" onClick={() => {changeCheckBox(props.id)}}/></div>\n                <div className=\"listComponentName\"><h4 >{props.content}</h4></div>\n                <div className=\"listComponentCrossButton\"><button  onClick={() => {deleteList(props.id)}}><b>X</b></button></div>\n            </div>\n        )\n    }\n\n    const changeCheckBox = (thisComponentId) => {\n        for(let i of todoArrayObject){\n            if(thisComponentId === i.id){\n                i.status = (i.status === false)? true:false;\n                break;\n            }\n        }\n    }\n\n    const deleteList = (thisComponentId) => {\n        for(let i in todoArrayObject){\n            if(thisComponentId === todoArrayObject[i].id){ \n                todoArrayObject.splice(i,1);\n                document.getElementById(thisComponentId).remove();\n                break; \n            }\n        }\n    }\n\n    const filterStatus = (displayType) => {\n        if(displayType === \"active\") {\n            displayList = 0; \n            let filtered = todoArrayObject.filter(function(value,index,arr){\n                if(value.status === false) return value;\n                return false;\n            });\n            filteredArray = filtered;\n            console.log(filteredArray);\n            setDisplayList(1);\n        }\n        else if(displayType === \"completed\") {\n            displayList = 0; \n            let filtered = todoArrayObject.filter(function(value,index,arr){\n                if(value.status === true) return value;\n                return false;  \n            });\n            filteredArray = filtered;\n            console.log(filteredArray);\n            setDisplayList(1);\n        }\n        else {\n            console.log(todoArrayObject);\n            setDisplayList(0);\n        }\n    }\n\n    const FilterButtons = () => {\n        return (\n            <div className=\"filterButtons\">\n                <button onClick={() => {filterStatus(\"active\")}}>Active</button>\n                <button onClick={() => {filterStatus(\"completed\")}}>Completed</button>\n                <button onClick={() => {filterStatus(\"all\")}}>All</button>\n            </div>\n        )       \n    }\n\n    return (\n        <div id=\"body\">\n            <h1>What's Your Today's Goal?</h1>\n            <InputFields />\n            <ListArea />\n            <FilterButtons />\n        </div>    \n    )\n}"]},"metadata":{},"sourceType":"module"}