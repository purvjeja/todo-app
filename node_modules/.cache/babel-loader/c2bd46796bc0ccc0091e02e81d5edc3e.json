{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n\n  let [todoArrayObject, setTodoArrayObject] = useState([]);\n  let [todoArrayText, setTodoArrayText] = useState([]);\n\n  const InputFields = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"currentInput\",\n        type: \"text\",\n        placeholder: \"Add Your Goals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addButton\",\n        onClick: AddCurrentGoal,\n        children: \" Add \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ListArea = () => {\n    const listItems = todoArrayObject.map((todoArrayItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(CreateComponent, {\n        content: todoArrayItem.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 90\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 72\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"listArea\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  };\n\n  const AddCurrentGoal = () => {\n    const currentGoal = document.getElementById('currentInput').value; // setTodoArrayText([currentGoal,...todoArrayText]);\n\n    setTodoArrayObject([...todoArrayObject, {\n      id: props.id,\n      content: props.content,\n      status: props.status\n    }]);\n  };\n\n  const CreateComponent = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: props.id,\n      className: \"listBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentCheckBox\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentName\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: props.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentCrossButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" To-Do List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputFields, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"QOyT32j3XjretaJOiEcrN+BRg3o=\");\n\n_c = Todo;\n\nconst FilterButtons = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = FilterButtons;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Todo\");\n$RefreshReg$(_c2, \"FilterButtons\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js"],"names":["React","useState","Todo","todoArrayObject","setTodoArrayObject","todoArrayText","setTodoArrayText","InputFields","AddCurrentGoal","ListArea","listItems","map","todoArrayItem","index","content","currentGoal","document","getElementById","value","id","props","status","CreateComponent","Name","FilterButtons"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './todo.css';\n\nexport default function Todo(){\n    let [todoArrayObject,setTodoArrayObject] = useState([]);\n    let [todoArrayText,setTodoArrayText] = useState([]);\n\n    const InputFields = () => {\n        return (\n            <div>\n                <input id=\"currentInput\" type=\"text\" placeholder=\"Add Your Goals\" />\n                <button id=\"addButton\" onClick={AddCurrentGoal}> Add </button> \n            </div>\n        )\n    }\n\n    const ListArea = () => {\n        const listItems = todoArrayObject.map((todoArrayItem,index) => <div key={index}> <CreateComponent  content={todoArrayItem.content} /></div>);\n        return (\n            <div id=\"listArea\"> \n                {listItems}\n            </div>\n        )\n    }\n\n    const AddCurrentGoal = () => {\n        const currentGoal = document.getElementById('currentInput').value;\n        // setTodoArrayText([currentGoal,...todoArrayText]);\n        setTodoArrayObject([...todoArrayObject,{id : props.id , content : props.content , status : props.status}]);\n    }\n\n    const CreateComponent = (props) => {\n        return (\n            <div id={props.id} className=\"listBody\">\n                <div className=\"listComponentCheckBox\"><input type=\"checkbox\" /></div>\n                <div className=\"listComponentName\"><h4>{props.Name}</h4></div>\n                <div className=\"listComponentCrossButton\"><button><b>X</b></button></div>\n            </div>\n        )\n    }\n\n    return (\n        <div id=\"body\">\n            <h1> To-Do List </h1>\n            <InputFields />\n            <ListArea />\n            <FilterButtons />\n        </div>    \n    )\n}\nconst FilterButtons = () => {\n    return (\n        <div>\n            <button>Active</button>\n            <button>Completed</button>\n            <button>All</button>\n        </div>\n    )       \n}\n "]},"metadata":{},"sourceType":"module"}