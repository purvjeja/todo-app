{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n\n  let [todoArrayObject, setTodoArrayObject] = useState([]);\n  let [listCount, setListCount] = useState(0);\n  let [displayArray, setDisplayArray] = useState([]);\n  let [checkBoxAppearance, setCheckBoxAppearance] = useState(0);\n\n  const InputFields = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"currentInput\",\n        type: \"text\",\n        placeholder: \" Add Your Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addButton\",\n        onClick: AddCurrentGoal,\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 65\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ListArea = () => {\n    let listItems = displayArray.map((displayArrayItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(CreateComponent, {\n        id: displayArrayItem.id,\n        content: displayArrayItem.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 72\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 54\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"listArea\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  const AddCurrentGoal = () => {\n    const currentGoal = document.getElementById('currentInput').value;\n\n    if (!currentGoal) {\n      alert(\"You are trying to add nothing!\");\n      return;\n    }\n\n    setTodoArrayObject([{\n      id: listCount,\n      content: currentGoal,\n      status: false\n    }, ...todoArrayObject]);\n    setDisplayArray([{\n      id: listCount,\n      content: currentGoal,\n      status: false\n    }, ...todoArrayObject]);\n    setListCount(listCount + 1);\n  };\n\n  const CreateComponent = props => {\n    if (checkBoxAppearance === 1) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: props.id,\n        className: \"listBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listComponentName\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listComponentCrossButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteList(props.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 111\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 63\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: props.id,\n        className: \"listBody\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listComponentCheckBox\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            onClick: () => {\n              changeCheckBox(props.id);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listComponentName\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 52\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"listComponentCrossButton\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              deleteList(props.id);\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 107\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this);\n    }\n  };\n\n  const changeCheckBox = thisComponentId => {\n    for (let i of todoArrayObject) {\n      if (thisComponentId === i.id) {\n        i.status = !i.status;\n        break;\n      }\n    }\n\n    setTodoArrayObject(todoArrayObject);\n  };\n\n  const deleteList = thisComponentId => {\n    for (let i in todoArrayObject) {\n      if (thisComponentId === todoArrayObject[i].id) {\n        todoArrayObject.splice(i, 1);\n        document.getElementById(thisComponentId).remove();\n        break;\n      }\n    }\n\n    setTodoArrayObject(todoArrayObject);\n\n    for (let j in displayArray) {\n      if (thisComponentId === displayArray[j].id) {\n        displayArray.splice(j, 1);\n        break;\n      }\n    }\n  };\n\n  const setCheckBox = () => {\n    console.log(displayArray);\n\n    for (let i of displayArray) {\n      if (i.status === true) {\n        document.getElementById(i.id).children[0].children[0].setAttribute(\"checked\", true);\n      }\n    }\n  };\n\n  const filterStatus = displayType => {\n    if (displayType === \"active\") {\n      let filtered = todoArrayObject.filter(function (value) {\n        if (value.status === false) return value;\n        return false;\n      });\n      setCheckBoxAppearance(1);\n      setDisplayArray(filtered);\n    } else if (displayType === \"completed\") {\n      let filtered = todoArrayObject.filter(function (value) {\n        if (value.status === true) return value;\n        return false;\n      });\n      setCheckBoxAppearance(1);\n      setDisplayArray(filtered);\n    } else {\n      setDisplayArray(todoArrayObject);\n      setCheckBoxAppearance(0);\n      setCheckBox();\n    }\n  };\n\n  const FilterButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          filterStatus(\"active\");\n        },\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          filterStatus(\"completed\");\n        },\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          filterStatus(\"all\");\n        },\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What is your today's goal?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputFields, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"87bVp3oQhX96EB6bn9ZVImOCFd8=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js"],"names":["React","useState","Todo","todoArrayObject","setTodoArrayObject","listCount","setListCount","displayArray","setDisplayArray","checkBoxAppearance","setCheckBoxAppearance","InputFields","AddCurrentGoal","ListArea","listItems","map","displayArrayItem","index","id","content","currentGoal","document","getElementById","value","alert","status","CreateComponent","props","deleteList","changeCheckBox","thisComponentId","i","splice","remove","j","setCheckBox","console","log","children","setAttribute","filterStatus","displayType","filtered","filter","FilterButtons"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './todo.css';\n\nexport default function Todo(){\n    let [todoArrayObject,setTodoArrayObject] = useState([]);\n    let [listCount,setListCount] = useState(0);\n    let [displayArray,setDisplayArray] = useState([]);\n    let [checkBoxAppearance,setCheckBoxAppearance] = useState(0);\n\n\n    const InputFields = () => {\n        return (\n            <div>\n                <input id=\"currentInput\" type=\"text\" placeholder=\" Add Your Goal\" />\n                <button id=\"addButton\" onClick={AddCurrentGoal}><b>+</b></button> \n            </div>\n        )\n    }\n\n    const ListArea = () => {\n        let  listItems = \n        displayArray.map((displayArrayItem,index) => <div key={index}> <CreateComponent  id={displayArrayItem.id} content={displayArrayItem.content}/></div>); \n        return (\n            <div id=\"listArea\"> \n                {listItems}\n            </div>\n        )\n    }\n    \n\n    const AddCurrentGoal = () => {\n        const currentGoal = document.getElementById('currentInput').value;\n        if(!currentGoal){ alert(\"You are trying to add nothing!\"); return; }\n        setTodoArrayObject([{id : listCount , content : currentGoal , status : false},...todoArrayObject]);\n        setDisplayArray([{id : listCount , content : currentGoal , status : false},...todoArrayObject]);\n        setListCount(listCount+1);\n    }\n\n    const CreateComponent = (props) => {\n        if(checkBoxAppearance === 1){\n            return (\n                <div id = {props.id} className=\"listBody\">\n                    <div className=\"listComponentName\"><h2>{props.content}</h2></div>\n                    <div className=\"listComponentCrossButton\"><button  onClick={() => {deleteList(props.id)}}><b>X</b></button></div>\n                </div>\n            )\n        }\n        else{\n        return (\n            <div id = {props.id} className=\"listBody\">\n                <div className=\"listComponentCheckBox\"><input type=\"checkbox\" onClick={() => {changeCheckBox(props.id)}} /></div>\n                <div className=\"listComponentName\"><h2>{props.content}</h2></div>\n                <div className=\"listComponentCrossButton\"><button  onClick={() => {deleteList(props.id)}}><b>X</b></button></div>\n            </div>\n        )\n        }\n    }\n\n    const changeCheckBox = (thisComponentId) => {\n        for(let i of todoArrayObject){\n            if(thisComponentId === i.id){\n                i.status =!(i.status);\n                break;\n            }\n        }\n        setTodoArrayObject(todoArrayObject);\n     }\n\n    const deleteList = (thisComponentId) => {\n        for(let i in todoArrayObject){\n            if(thisComponentId === todoArrayObject[i].id){ \n                todoArrayObject.splice(i,1);\n                document.getElementById(thisComponentId).remove();\n                break; \n            }\n        }\n        setTodoArrayObject(todoArrayObject);\n        for(let j in displayArray){\n            if(thisComponentId === displayArray[j].id){ \n                displayArray.splice(j,1);\n                break; \n            }\n        }\n    }\n\n    const setCheckBox = () => {\n        console.log(displayArray);\n        for(let i of displayArray) {\n            if(i.status === (true)) {\n                document.getElementById(i.id).children[0].children[0].setAttribute(\"checked\",true);\n            }\n        }\n    }\n  \n\n    const filterStatus = (displayType) => {\n        if(displayType === \"active\") {\n            let filtered = todoArrayObject.filter(function(value){\n                if(value.status === false) return value;\n                return false;\n            });\n            setCheckBoxAppearance(1);\n            setDisplayArray(filtered);\n        }\n        else if(displayType === \"completed\") {\n            let filtered = todoArrayObject.filter(function(value){\n                if(value.status === true) return value;\n                return false;\n            });\n            setCheckBoxAppearance(1);\n            setDisplayArray(filtered);\n        }\n        else {\n            setDisplayArray(todoArrayObject);\n            setCheckBoxAppearance(0);\n            setCheckBox();\n        }\n    }\n\n   \n    const FilterButtons = () => {\n        return (\n            <div className=\"filterButtons\">\n                <button onClick={ () => {filterStatus(\"active\")}}>Active</button>\n                <button onClick={ () => {filterStatus(\"completed\")}}>Completed</button>\n                <button onClick={ () => {filterStatus(\"all\")}}>All</button>\n            </div>\n        )       \n    }\n    return (\n        <div id=\"body\">\n            <h1>What is your today's goal?</h1>\n            <InputFields />\n            <ListArea />\n            <FilterButtons />\n        </div>    \n    )\n}"]},"metadata":{},"sourceType":"module"}