{"ast":null,"code":"var _jsxFileName = \"/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './todo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Todo() {\n  _s();\n\n  let [todoArrayObject, setTodoArrayObject] = useState([]);\n  let [filteredArray, setFilteredArray] = useState([]);\n  let [listCount, setListCount] = useState(0);\n  let displayList = 0;\n\n  const InputFields = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"currentInput\",\n        type: \"text\",\n        placeholder: \" Add Your Goal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"addButton\",\n        onClick: AddCurrentGoal,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 66\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this);\n  };\n\n  const ListArea = () => {\n    let listItems;\n    if (displayList === 0) listItems = todoArrayObject.map((todoArrayItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(CreateComponent, {\n        id: todoArrayItem.id,\n        content: todoArrayItem.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 106\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 88\n    }, this));else listItems = filteredArray.map((todoArrayItem, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(CreateComponent, {\n        id: todoArrayItem.id,\n        content: todoArrayItem.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 87\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 69\n    }, this));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"listArea\",\n      children: listItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  };\n\n  const AddCurrentGoal = () => {\n    const currentGoal = document.getElementById('currentInput').value;\n\n    if (!currentGoal) {\n      alert(\"You are trying to add nothing!\");\n      return;\n    }\n\n    setTodoArrayObject([{\n      id: listCount,\n      content: currentGoal,\n      status: false\n    }, ...todoArrayObject]);\n    setFilteredArray([{\n      id: listCount,\n      content: currentGoal,\n      status: false\n    }, ...todoArrayObject]);\n    setListCount(listCount + 1);\n  };\n\n  const CreateComponent = props => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentCheckBox\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          id: props.id,\n          type: \"checkbox\",\n          onClick: () => {\n            changeCheckBox(props.id);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentName\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          id: props.id,\n          children: props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"listComponentCrossButton\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: props.id,\n          onClick: () => {\n            deleteList(props.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 122\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  const changeCheckBox = thisComponent => {\n    // for(let i of todoArrayObject){\n    //     if(thisComponent.id === i.id) \n    //     console.log(i.status);\n    // }\n    console.log(thisComponent);\n  };\n\n  const deleteList = id => {}; // const filterStatus = (displayType) => {\n  //     if(displayType === \"active\") {\n  //         let \n  //     }\n  // }\n\n\n  const FilterButtons = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filterButtons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's Your Today's Goal?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(InputFields, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ListArea, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Todo, \"FDZcpVxEmgMlLvxkdu7b3szuRzg=\");\n\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/home/purvj/Documents/github-repositories/javascript-practice/REACT JS/to-do-list/src/todo.js"],"names":["React","useState","Todo","todoArrayObject","setTodoArrayObject","filteredArray","setFilteredArray","listCount","setListCount","displayList","InputFields","AddCurrentGoal","ListArea","listItems","map","todoArrayItem","index","id","content","currentGoal","document","getElementById","value","alert","status","CreateComponent","props","changeCheckBox","deleteList","thisComponent","console","log","FilterButtons"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './todo.css';\n\nexport default function Todo(){\n    let [todoArrayObject,setTodoArrayObject] = useState([]);\n    let [filteredArray,setFilteredArray] = useState([]);\n    let [listCount,setListCount] = useState(0);\n    let displayList = 0;\n\n    const InputFields = () => {\n        return (\n            <div>\n                <input id=\"currentInput\" type=\"text\" placeholder=\" Add Your Goal\" />\n                <button id=\"addButton\" onClick={AddCurrentGoal}> <b>+</b> </button> \n            </div>\n        )\n    }\n\n    const ListArea = () => {\n        let listItems;\n        if(displayList === 0) listItems = todoArrayObject.map((todoArrayItem,index) => <div key={index}> <CreateComponent  id={todoArrayItem.id} content={todoArrayItem.content} /></div>);\n        else listItems = filteredArray.map((todoArrayItem,index) => <div key={index}> <CreateComponent  id={todoArrayItem.id} content={todoArrayItem.content} /></div>);\n        return (\n            <div id=\"listArea\"> \n                {listItems}\n            </div>\n        )\n    }\n    \n\n    const AddCurrentGoal = () => {\n        const currentGoal = document.getElementById('currentInput').value;\n        if(!currentGoal){ alert(\"You are trying to add nothing!\"); return; }\n        setTodoArrayObject([{id : listCount , content : currentGoal , status : false},...todoArrayObject]);\n        setFilteredArray([{id : listCount , content : currentGoal , status : false},...todoArrayObject]);\n        setListCount(listCount+1);\n    }\n\n    const CreateComponent = (props) => {\n        return (\n            <div className=\"listBody\">\n                <div className=\"listComponentCheckBox\"><input id={props.id} type=\"checkbox\" onClick={() => {changeCheckBox(props.id)}}/></div>\n                <div className=\"listComponentName\"><h4 id = {props.id}>{props.content}</h4></div>\n                <div className=\"listComponentCrossButton\"><button id = {props.id} onClick={() => {deleteList(props.id)}}><b>X</b></button></div>\n            </div>\n        )\n    }\n\n    const changeCheckBox = (thisComponent) => {\n        // for(let i of todoArrayObject){\n        //     if(thisComponent.id === i.id) \n        //     console.log(i.status);\n        // }\n        console.log(thisComponent);\n    }\n\n    const deleteList = (id) => {\n    }\n\n    // const filterStatus = (displayType) => {\n    //     if(displayType === \"active\") {\n    //         let \n    //     }\n    // }\n\n    const FilterButtons = () => {\n        return (\n            <div className=\"filterButtons\">\n                {/* <button onClick={filterStatus(\"active\")}>Active</button>\n                <button onClick={filterStatus(\"completed\")}>Completed</button>\n                <button onClick={filterStatus(\"all\")}>All</button> */}\n            </div>\n        )       \n    }\n\n    return (\n        <div id=\"body\">\n            <h1>What's Your Today's Goal?</h1>\n            <InputFields />\n            <ListArea />\n            <FilterButtons />\n        </div>    \n    )\n}"]},"metadata":{},"sourceType":"module"}